theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,2.5)))
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,2.5))) +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
ggplot(data.frame(rnorm(10000)), aes(x = rnorm(10000,0,100))) +
geom_density()
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,sd(model_lr$residuals)))) +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,sd(model_lr$residuals))),
color = "red") +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
wage_age()
wage_age <- function(line = FALSE, poly = 1, formula_wage_age = y ~ x){
plot_title <- "Scatter Plot between Wage and Age"
if(poly != 1){
plot_title <- paste0("Polynomial degree ", poly)
}
plot_wage_age <- ggplot(data, aes(x = age, y = wage)) +
geom_point(color = "darkblue") +
theme_bw() +
labs(title = plot_title, x = "Age", y = "Wage")
if(line == TRUE){
plot_wage_age +
geom_smooth(method = "lm", formula = formula_wage_age, color = "yellow")
} else {
plot_wage_age
}
}
## Function for calculate and plot
plot_kfold <- function(knots = 1:10, bs = TRUE){
store_MSE <- c()
title_plot <- "5-fold cross-validate MSE"
if(bs == TRUE){
title_plot <- paste0(title_plot, ": Basis Spline")
} else  {
title_plot <- paste0(title_plot, ": Natural Spline")
}
for(i in knots){
MSE <- c()
for(j in 1:5){
## Split the data
train_data <- data %>% filter(CV != j)
validate_data <- data %>% filter(CV == j)
## Train the model
if(bs == TRUE){
model <- lm(wage ~ bs(age, df = 4 + i) + education + year,
data = train_data)
} else {
model <- lm(wage ~ ns(age, df = 2 + i) + education + year,
data = train_data)
}
## Store the MSE for each validation set
MSE <- c(MSE,
mean((predict(model, validate_data) - validate_data$wage)^2))
}
## Store the MSE for each knots
store_MSE <- c(store_MSE, mean(MSE))
}
## Create a plot
dummy_result <- data.frame(knots = as.factor(knots), store_MSE)
p <- ggplot(dummy_result, aes(x = knots, y = store_MSE, group = 1)) +
geom_line() +
geom_point() +
labs(title = title_plot, x = "Number of knot", y = "MSE") +
geom_text(aes(label = round(store_MSE,2)), vjust = -1) +
ylim(min(store_MSE) - 3, max(store_MSE) + 3) +
theme_bw()
print(p)
}
wage_age()
fig_s1 <- paste0("Figure 3.1 Scatter plot between Wage and Age")
wage_age
wage_age(line = TRUE)
fig_s1 <- paste0("Figure 3.1 Scatter plot between Wage and Age")
source(paste0(path, "/R/User-written functions.R"))
source(paste0(path, "R/User-written functions.R"))
path <- "/Users/kevin/506FA20/Stats506_Project/"
source(paste0(path, "R/User-written functions.R"))
poly(data$age, 3)
model_poly <- lm(wage ~ poly(age, 3) + education + year, data = data)
summary(model_poly)
model_poly <- lm(wage ~ poly(age, 3) + edu + year, data = data)
summary(model_poly)
model_cut <- lm(wage ~ cut(age, 4) + edu + year, data = data)
summary(model_cut)
wage_age(TRUE, 1, y ~ cut(x,4))
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = 40)
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = c(33.5, 49, 64.5, 80.1))
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,5)) +
geom_vline(xintercept = c(33.5, 49, 64.5, 80.1))
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
model_cut <- lm(wage ~ cut(age, 5) + edu + year, data = data)
summary(model_cut)
model_cut <- lm(wage ~ cut(age, 4) + edu + year, data = data)
summary(model_cut)
wage_age(TRUE, 1, y ~ cut(x,5)) +
geom_vline(xintercept = c(33.5, 49, 64.5, 80.1))
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,5)) +
geom_vline(xintercept = c(33.5, 49, 64.5, 80.1), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,5)) +
geom_vline(xintercept = c(33.5, 49, 64.5), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,5)) +
geom_vline(xintercept = c(30, 49, 64.5), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = c(30, 49, 64.5), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = c(33.5, 49, 64.5), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
set.seed(1)
data$CV <- sample(rep(1:5, 600))
set.seed(1)
data$CV <- sample(rep(1:5, 600))
plot_kfold()
model_basis <- lm(wage ~ bs(age, df = 6) + education + year, data = data)
summary(model_basis)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(knitr)
library(foreign)
print("When you want this chunck to run, but don't want to show the code.")
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
path <- "/Users/kevin/506FA20/Stats506_Project/"
source(paste0(path, "R/User-written functions.R"))
readLines(paste0(path, "R/User-written functions.R"))
## This is the location where you keep your dataset.
path <- "/Users/kevin/506FA20/Stats506_Project/Dataset/"
data <- read.csv(paste0(path, "data.csv"))
edu_val <- data.frame(data %>%
distinct(education) %>%
arrange(education),
1:5)
colnames(edu_val) <- c("Old Value", "New Value")
cap_R1 = "Table 3.1 The converted value of the Education variable."
kable(edu_val, caption = cap_R1)
data <- data %>% mutate(edu = ifelse(education == "1. < HS Grad", 1,
ifelse(education == "2. HS Grad", 2,
ifelse(education == "3. Some College", 3,
ifelse(education == "4. College Grad", 4, 5)))))
model_lr <- lm(wage ~ age + edu + year, data = data)
summary(model_lr)
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,sd(model_lr$residuals))),
color = "red") +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
wage_age(line = TRUE)
cap_R3 <- paste0("Figure 3.3 Scatter plot between Wage and Age")
model_poly <- lm(wage ~ poly(age, 3) + edu + year, data = data)
summary(model_poly)
model_cut <- lm(wage ~ cut(age, 4) + edu + year, data = data)
summary(model_cut)
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = c(33.5, 49, 64.5), color = "red")
fig_s2 <- paste0("Figure 3.2 Scatter plot between Wage and Age with the
step function.")
set.seed(1)
data$CV <- sample(rep(1:5, 600))
plot_kfold()
model_basis <- lm(wage ~ bs(age, df = 6) + edu + year, data = data)
summary(model_basis)
plot_kfold(bs = FALSE)
model_natural <- lm(wage ~ ns(age, df = 6) + education + year, data = data)
summary(model_natural)
source(paste0(path, "R/EDA.R")) ## Function for EDA
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
data <- read.csv(paste0(path, "dataset/data.csv"))
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
## EDA: Save plots
nvar_plot(wage, "Wage")
nvar_plot(age, "Age")
cvar_plot(year, "Year")
cvar_plot(education, "Education")
gridExtra(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
library(gridExtra) ## This library is also for data visualization.
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
path
## EDA: Save plots
paste0(path, "R/EDA.png")
## EDA: Save plots
ggsave(paste0(path, "R/EDA.png"),
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education")))
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
## Required Libraries
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
## Required Libraries
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
## Required Libraries
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education"))
## EDA: Save plots
ggsave(paste0(path, "R/EDA.png"),
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education")))
## Change Education into the numerical variable.
data <- data %>% mutate(edu = ifelse(education == "1. < HS Grad", 1,
ifelse(education == "2. HS Grad", 2,
ifelse(education == "3. Some College", 3,
ifelse(education == "4. College Grad", 4, 5)))))
## EDA: Save plots
ggsave(paste0(path, "R/EDA.png"),
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(education, "Education")))
## EDA: Save plots
ggsave(paste0(path, "R/EDA.png"),
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(edu, "Education")))
## Required Libraries
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
## Load data and user-written functions into R.
path <- "/Users/kevin/506FA20/Stats506_Project/" ## Change to your path
data <- read.csv(paste0(path, "dataset/data.csv"))
source(paste0(path, "R/User-written functions.R")) ## Read functions.
source(paste0(path, "R/EDA.R")) ## Function for EDA
## Change Education into the numerical variable.
data <- data %>% mutate(edu = ifelse(education == "1. < HS Grad", 1,
ifelse(education == "2. HS Grad", 2,
ifelse(education == "3. Some College", 3,
ifelse(education == "4. College Grad", 4, 5)))))
## EDA: Save plots
ggsave(paste0(path, "R/EDA.png"),
grid.arrange(nvar_plot(wage, "Wage"), nvar_plot(age, "Age"),
cvar_plot(year, "Year"), cvar_plot(edu, "Education")))
![Figure 0.2: Histogram or Bar chart for variables used in the analysis](/Users/kevin/506FA20/Stats506_Project/R/EDA.png)
data <- read.csv(paste0(path, "Dataset/data.csv"))
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,sd(model_lr$residuals))),
color = "red") +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
wage_age(line = FALSE, poly = 3, y ~ poly(x,3))
cap_R3 <- paste0("Figure 3.3 Scatter plot between Wage and Age")
wage_age(line = TRUE, poly = 3, y ~ poly(x,3))
cap_R3 <- paste0("Figure 3.3 Scatter plot between Wage and Age")
wage_age(line = TRUE, poly = 3, y ~ poly(x,3))
cap_R4 <- paste0("Figure 3.4 Scatter plot between Wage and Age with a line
indicate the cubic polynomial regression")
plot_kfold()
set.seed(1)
data$CV <- sample(rep(1:5, 600))
plot_kfold()
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(knitr)
library(foreign)
library(tidyverse) ## This library is for data manipulation.
library(ggplot2) ## This library is for data visualization.
library(gridExtra) ## This library is also for data visualization.
library(splines) ## This library is for spline.
path <- "/Users/kevin/506FA20/Stats506_Project/"
source(paste0(path, "R/User-written functions.R"))
readLines(paste0(path, "R/User-written functions.R"))
data <- read.csv(paste0(path, "Dataset/data.csv"))
edu_val <- data.frame(data %>%
distinct(education) %>%
arrange(education),
1:5)
colnames(edu_val) <- c("Old Value", "New Value")
cap_R1 = "Table 3.1 The converted value of the Education variable."
kable(edu_val, caption = cap_R1)
data <- data %>% mutate(edu = ifelse(education == "1. < HS Grad", 1,
ifelse(education == "2. HS Grad", 2,
ifelse(education == "3. Some College", 3,
ifelse(education == "4. College Grad", 4, 5)))))
model_lr <- lm(wage ~ age + edu + year, data = data)
summary(model_lr)
cap_R2 <- "Figure 3.2 The QQ plot, along with the Kernel density plot of the
residual from the linear regression."
set.seed(1) ## For the reproducible plot.
p1 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(sample = resi)) +
stat_qq(color = "darkblue") +
stat_qq_line(color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "The QQ plot of the residuals",
x = "Inverse Normal",
y = "Residuals")
p2 <- data.frame(resi = model_lr$residuals) %>%
ggplot(aes(x = resi)) +
geom_density(color = "darkblue") +
geom_density(data = data.frame(resi = rnorm(10000,0,sd(model_lr$residuals))),
color = "red") +
theme_bw() +
labs(title = "Kernel Density Estimate",
x = "Residual",
y = "Density")
grid.arrange(p1, p2, ncol = 2)
wage_age(line = TRUE)
cap_R3 <- paste0("Figure 3.3 Scatter plot between Wage and Age")
model_poly <- lm(wage ~ poly(age, 3) + edu + year, data = data)
summary(model_poly)
wage_age(line = TRUE, poly = 3, y ~ poly(x,3))
cap_R4 <- paste0("Figure 3.4 Scatter plot between Wage and Age with a line
indicate the cubic polynomial regression")
model_cut <- lm(wage ~ cut(age, 4) + edu + year, data = data)
summary(model_cut)
wage_age(TRUE, 1, y ~ cut(x,4)) +
geom_vline(xintercept = c(33.5, 49, 64.5), color = "red")
fig_R5 <- paste0("Figure 3.5 Scatter plot between Wage and Age with the
step function.")
set.seed(1)
data$CV <- sample(rep(1:5, 600))
plot_kfold()
cap_R6 <- "Figure 3.6 The MSE of the basis spline from performing
5-fold cross validation"
install.packages("png")
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(knitr)
library(foreign)
library(png)
readPNG("/Users/kevin/506FA20/Stats506_Project/R/EDA.png")
include_graphics("/Users/kevin/506FA20/Stats506_Project/R/EDA.png")
## Path for Pictures in the report
## Erin:
## Kevin: "/Users/kevin/"
pic_path <- "/Users/kevin/"
## Path for Pictures in the report
## Erin:
## Kevin: "/Users/kevin/506FA20/"
pic_path <- "/Users/kevin/506FA20/"
include_graphics(paste0(pic_path, "Stats506_Project/R/EDA.png"))
include_graphics(paste0(pic_path, "Stats506_Project/R/EDA.png"))
cap_02 <- "Figure 0.2: Histogram or Bar chart for variables
used in the analysis"
include_graphics(paste0(pic_path, "Stats506_Project/Stata/stata_reg_output.png"))
include_graphics(paste0(pic_path, "Stats506_Project/Stata/kernel_dens_reg.jpg"))
cap_Stata2 <- "Kernel Density Plot"
wage_age(TRUE, 1, y ~ bs(x,df = 6))
wage_age(TRUE, 1, y ~ ns(x,df = 6))
plot_kfold(bs = FALSE)
cap_R7 <- "Figure 3.7 The MSE of the natural spline from performing
5-fold cross validation"
wage_age(TRUE, 1, y ~ bs(x,df = 6))
cap_R7 <- "Scatter plot between Wage and Age with Regression line.
(Basis Spline)"
install.packages(c("sjPlot", "sjmisc", "sjlabelled"))
## These packages' objective is to create the output of the regression model
## nicely.
library(sjPlot)
library(sjmisc)
library(sjlabelled)
